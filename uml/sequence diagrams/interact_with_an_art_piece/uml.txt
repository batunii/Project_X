@startuml
actor User
participant "Controller/Input Manager" as Input
participant "HUD Manager" as HUD
participant "Room Manager" as Room
participant "Canvas/Platform Manager" as Canvas
participant "Network Manager" as Network
participant "Event Logger" as Logger

title Interact with an Art Piece

== Basic Flow ==

User -> Input: walks up to an art piece (threshold reached)
Input -> Room: notifies proximity event
Room -> HUD: highlight nearby art piece
HUD -> User: art piece highlighted (interaction mode available)

User -> Input: selects the highlighted art piece
Input -> Room: confirm art piece selection
Room -> Canvas: request art piece details (metadata, available interactions)
Canvas -> Network: fetch metadata / related media
Network -> Canvas: send art data and multimedia
Canvas -> HUD: display interaction options (zoom, rotate, info, etc.)
HUD -> User: shows options to interact with the art piece

User -> Input: selects an interaction option (e.g., zoom/rotate/show info)
Input -> Canvas: send chosen command
Canvas -> Room: update art display according to user action
Room -> HUD: render visual change or playback multimedia
HUD -> User: updated art interaction view
Canvas -> Logger: log user interaction

== Alternative Flow 1 – Selection via Controller ==

User -> Input: uses controller pointer to select art piece
Input -> Room: confirm art piece selection
Room -> HUD: highlight and enter interaction mode

== Alternative Flow 2 – Network Failure ==

Canvas -> Network: request art data
Network --> Canvas: error / timeout
Canvas -> HUD: show error notification ("Unable to load art details")
HUD -> Logger: log network error

== Alternative Flow 3 – Exit Interaction Mode ==
User -> Input: exits interaction mode
Input -> Room: notify exit event
Room -> HUD: revert to free-move mode
HUD -> User: normal navigation restored
Room -> Logger: log exit interaction

@enduml
